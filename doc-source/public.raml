#%RAML 1.0
title: Quote Ninja
protocols: [ HTTPS ]
mediaType: application/json
baseUri: https://api.quoteninja.com/v3/bc/public
securitySchemes:
  custom_scheme:
    description: Authenticate via the custom API Token
    type: x-custom
    describedBy:
      headers:
        x-auth-client:
          description: Send the API Client ID via header (usually the storeid)
          type: string
        x-auth-token:
          description: Send the API Token via header
          type: string
      responses:
        401:
          description: Bad Token

types:
  Customer:
    type: object
    properties:
      name: string
      company?: string
      email:
        type: string
        description: Email Address, can be multiple joined by ';'
        examples:
          single: "test@example.com"
          multiple: "test@example.com;test2@example.com"
      phone?: string
      address?: string
      address-2?: string
      city?: string
      state?:
        type: string
        description: State in Short Form
        example: "TX"
      zipcode?: string
      country:
        type: string
        description: Country Code in ISO format
        example: "US"

  ProductOption:
    type: object
    properties:
      display_name: string
      value: string
  ListOfProductOptions: ProductOption[]

  File:
    type: object
    properties:
      attach: boolean
      name: string
      size:
        type: number
        description: Size of the file in MB
      type:
        enum: [
          "image/jpeg",
          "application/pdf"
        ]
      url: string
  ListOfFiles:
    type: object
    properties:
      /.*/: File
    description: List of Files (Object Map), each key in object has a corresponding File
    example:
      file-1:
        attach: false
        name: 'Spreadsheet-1.pdf'
        size: 9.234
        type: 'application/pdf'
        url: 'https://securefileserver.com/filexyz.pdf'
      file-2:
        attach: true
        name: 'Spreadsheet-2.pdf'
        size: 5.442
        type: 'application/pdf'
        url: 'https://securefileserver.com/fileabc.pdf'

  Product:
    type: object
    properties:
      id: number
      qty: number
      product_options?: ListOfProductOptions
  ListOfProducts: Product[]
  ListOfProductsReturned:
    type: object
      properties:
        /.*/: Product
      description: List of Products (Object Map), each key in the object has a corresponding Product
      example:
        product-key-1:
          id: 1
          qty: 1

  Quote:
    type: object
    properties:
      user_id:
        type: string
        required: true
      customer: Customer
      products: ListOfProducts
      origin:
        enum: [ external-api ]
      related_files?: ListOfFiles

  QuoteReturned:
    type: object
    properties:
      user_id:
        type: string
        required: true
      customer: Customer
      products: ListOfProductsReturned
      origin:
        enum: [ external-api ]
      related_files?: ListOfFiles

/quote:
  get:
    securedBy: custom_scheme
    description: Retrieve an Existing Quote
    queryParameters:
      storeId:
        type: string
        required: true
      quoteId:
        type: string
        required: true
    responses:
      200:
        body:
          application/json:
            type: QuoteReturned

  post:
    securedBy: custom_scheme
    description: Create a Quote
    queryParameters:
      storeId:
        type: string
        required: true
    body:
      application/json:
        type: Quote
        required: true
    responses:
      200:
        body:
          application/json:
            type: object
            properties:
              quote_id: string
              quote: Quote

  put:
    securedBy: custom_scheme
    description: Modify an Existing Quote
    queryParameters:
      storeId:
        type: string
        required: true
      quoteId:
        type: string
        required: true
    body:
      application/json:
        type: Quote
        required: true
    responses:
      200:
        body:
          application/json:
            type: object
            properties:
              quote: Quote
              success: boolean

  delete:
    securedBy: custom_scheme
    description: Delete an Existing Quote
    queryParameters:
      storeId:
        type: string
        required: true
      quoteId:
        type: string
        required: true
    responses:
      200:
        body:
          application/json:
            type: object
            properties:
              quote: Quote
              success: boolean

  /send:
    post:
      securedBy: custom_scheme
      description: Send Quote to Customer
      queryParameters:
        storeId:
          type: string
          required: true
        quoteId:
          type: string
          required: true
        templateId:
          type: string
          required: true
      body: 
        application/json:
          type: object
          required: false
          properties:
            from?:
              type: object
              properties:
                name: string
                email: string
            subject?: string

      responses:
        200:
          body:
            application/json:
              type: object
              properties:
                success: boolean
